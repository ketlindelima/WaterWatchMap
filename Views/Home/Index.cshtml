@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="~/app/leaflet/leaflet.css"/>

<style>
    #map{
        height: calc(100vh - 0px) !important;
    }
    .leaflet-container {
        width: 100%;
        height: 100vh;
    }

    .legend, .temporal-legend {
        padding: 6px 10px;
        font: 14px/16px Arial, Helvetica, sans-serif;
        background: rgba(0,0,0,0.85);
        box-shadow: 0 0 15px rgba(0,0,0,0.2);
        border-radius: 5px;
        color: whitesmoke;
    }

    #legendTitle {
        text-align: center;
        margin-bottom: 15px;
        color: whitesmoke;
        font-weight: bold;
    }

    .symbolsContainer {
        float: left;
        margin-left: 50px;
    }

    .legendCircle {
        border-radius: 50%;
        border: 1px solid #537898;
        background: rgba(0,128,128,1.5);
        display: inline-block;
    }

    .legendValue{
        position: absolute;
        right: 12px;
        color: whitesmoke;
        font-size: 10pt;
        text-align: center;
        font-weight: bold;
    }

    .info {
        width: 30vw;
        height: 48vh;
        padding: 6px 10px;
        font: 14px/16px Arial, Helvetica, sans-serif;
        background: rgba(0,0,0,0.85);
        box-shadow: 0 0 15px rgba(0,0,0,0.2);
        border-radius: 5px;
        color: whitesmoke;
    }

    .info h5 {
        margin: 0 0 5px;
        @* color: #777; *@
        text-align: center;
        color: whitesmoke;
        font-weight: bolder;
    }

    .info #horBarChart {
        width: 100% !important;
        max-width: 800px;
    }

    .leaflet-control-layers{
        float: right;
        top: 500px;
        right: 0;
        position: absolute;
        background: rgba(0,0,0,0.85);
        box-shadow: rgba(0,0,0,0.2);
    }

    .legend {
        line-height: 20px;
        color: white;
    }

    .legend i {
        width: 18px;
        height: 18px;
        float: left;
        margin-right: 8px;
        opacity: 0.7;
    }
</style>

<script src="~/app/jquery/dist/jquery.min.js"></script>
<script src="~/app/leaflet/leaflet.js"></script>
<script src="~/app/extscripts/js/Chart.js"></script>


<div id="map"></div>

<script>
    
    var dataUrl = "http://localhost:5118/waterconsumption/getall";

    var OsmHumanitarian = L.tileLayer('http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
	maxZoom: 19,
	attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });
    var OpenStreetMap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
	maxZoom: 19,
	attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });
    var Stadia_OSMBright = L.tileLayer('https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.{ext}', {
	minZoom: 0,
	maxZoom: 20,
	attribution: '&copy; <a href="https://www.stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
	ext: 'png'
});

    var map = L.map('map', {
        layers: [OsmHumanitarian]
    }).setView([-33.925, 18.625], 11);

    @* Coordinates to Curitiba *@
    @* var map = L.map('map', {
        layers: [OsmHumanitarian]
    }).setView([-25.4284, -49.2733], 11);  *@


        var baseLayers = {
        "Open Street Map": OpenStreetMap,
        "OSM Humanitarian": OsmHumanitarian,
        "Stadia OSM Bright": Stadia_OSMBright
        }

    L.control.layers(baseLayers).addTo(map);

    function getColor(d) {
        var pallete = ['#ffffe5','#f7fcb9','#d9f0a3','#addd8e','#78c679','#41ab5d','#238443','#005a32'];
        return d > 40 ? pallete[7] :
            d > 35 ? pallete[6] :
            d > 30 ? pallete[5] :
            d > 25 ? pallete[4] :
            d > 20 ? pallete[3] :
            d > 15 ? pallete[2] :
            d > 10 ? pallete[1] :
                     pallete[0];
    }

    $.getJSON(dataUrl, function(data){
        $.each(data, function(i,item){
            var convePolygons = JSON.parse(item.coordinates);

            var polygons = L.polygon(convePolygons, {
                fillColor: getColor(item.avarageMonthlyKL),
                color: 'white',
                fillOpacity: 0.8
            });
            polygons.bindPopup(
                "<h4><b>Suburb Group: </b> [" + item.suburbGroup.toString() + "]</h4>" +
                "<h4><b>Neighbourhood: </b> " + item.neighbourhood.toString() + "</h4>" +
                "<h4><b>Water Consumption: </b> " + item.avarageMonthlyKL.toString() + " KL</h4>"
            );
            polygons.on('mouseover', function(e){
                this.setStyle({
                    color: 'yellow',
                    weight: 5
                });
                this.openPopup();
            });
            polygons.on('mouseout', function(e){
                this.setStyle({
                    color: 'white',
                    weight: 2
                });
                this.closePopup();
            });
            polygons.addTo(map);
        });
    });
</script> 

